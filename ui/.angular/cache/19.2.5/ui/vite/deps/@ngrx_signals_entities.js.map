{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ngrx/signals/fesm2022/ngrx-signals-entities.mjs"],
  "sourcesContent": ["import { computed } from '@angular/core';\nimport { signalStoreFeature, withState, withComputed } from '@ngrx/signals';\nvar DidMutate;\n(function (DidMutate) {\n  DidMutate[DidMutate[\"None\"] = 0] = \"None\";\n  DidMutate[DidMutate[\"Entities\"] = 1] = \"Entities\";\n  DidMutate[DidMutate[\"Both\"] = 2] = \"Both\";\n})(DidMutate || (DidMutate = {}));\nconst defaultSelectId = entity => entity.id;\nfunction getEntityIdSelector(config) {\n  return config?.selectId ?? defaultSelectId;\n}\nfunction getEntityStateKeys(config) {\n  const collection = config?.collection;\n  const entityMapKey = collection === undefined ? 'entityMap' : `${collection}EntityMap`;\n  const idsKey = collection === undefined ? 'ids' : `${collection}Ids`;\n  const entitiesKey = collection === undefined ? 'entities' : `${collection}Entities`;\n  return {\n    entityMapKey,\n    idsKey,\n    entitiesKey\n  };\n}\nfunction cloneEntityState(state, stateKeys) {\n  return {\n    entityMap: {\n      ...state[stateKeys.entityMapKey]\n    },\n    ids: [...state[stateKeys.idsKey]]\n  };\n}\nfunction getEntityUpdaterResult(state, stateKeys, didMutate) {\n  switch (didMutate) {\n    case DidMutate.Both:\n      {\n        return {\n          [stateKeys.entityMapKey]: state.entityMap,\n          [stateKeys.idsKey]: state.ids\n        };\n      }\n    case DidMutate.Entities:\n      {\n        return {\n          [stateKeys.entityMapKey]: state.entityMap\n        };\n      }\n    default:\n      {\n        return {};\n      }\n  }\n}\nfunction addEntityMutably(state, entity, selectId) {\n  const id = selectId(entity);\n  if (state.entityMap[id]) {\n    return DidMutate.None;\n  }\n  state.entityMap[id] = entity;\n  state.ids.push(id);\n  return DidMutate.Both;\n}\nfunction addEntitiesMutably(state, entities, selectId) {\n  let didMutate = DidMutate.None;\n  for (const entity of entities) {\n    const result = addEntityMutably(state, entity, selectId);\n    if (result === DidMutate.Both) {\n      didMutate = result;\n    }\n  }\n  return didMutate;\n}\nfunction setEntityMutably(state, entity, selectId) {\n  const id = selectId(entity);\n  if (state.entityMap[id]) {\n    state.entityMap[id] = entity;\n    return DidMutate.Entities;\n  }\n  state.entityMap[id] = entity;\n  state.ids.push(id);\n  return DidMutate.Both;\n}\nfunction setEntitiesMutably(state, entities, selectId) {\n  let didMutate = DidMutate.None;\n  for (const entity of entities) {\n    const result = setEntityMutably(state, entity, selectId);\n    if (didMutate === DidMutate.Both) {\n      continue;\n    }\n    didMutate = result;\n  }\n  return didMutate;\n}\nfunction removeEntitiesMutably(state, idsOrPredicate) {\n  const ids = Array.isArray(idsOrPredicate) ? idsOrPredicate : state.ids.filter(id => idsOrPredicate(state.entityMap[id]));\n  let didMutate = DidMutate.None;\n  for (const id of ids) {\n    if (state.entityMap[id]) {\n      delete state.entityMap[id];\n      didMutate = DidMutate.Both;\n    }\n  }\n  if (didMutate === DidMutate.Both) {\n    state.ids = state.ids.filter(id => id in state.entityMap);\n  }\n  return didMutate;\n}\nfunction updateEntitiesMutably(state, idsOrPredicate, changes, selectId) {\n  const ids = Array.isArray(idsOrPredicate) ? idsOrPredicate : state.ids.filter(id => idsOrPredicate(state.entityMap[id]));\n  let newIds = undefined;\n  let didMutate = DidMutate.None;\n  for (const id of ids) {\n    const entity = state.entityMap[id];\n    if (entity) {\n      const changesRecord = typeof changes === 'function' ? changes(entity) : changes;\n      state.entityMap[id] = {\n        ...entity,\n        ...changesRecord\n      };\n      didMutate = DidMutate.Entities;\n      const newId = selectId(state.entityMap[id]);\n      if (newId !== id) {\n        state.entityMap[newId] = state.entityMap[id];\n        delete state.entityMap[id];\n        newIds = newIds || {};\n        newIds[id] = newId;\n      }\n    }\n  }\n  if (newIds) {\n    state.ids = state.ids.map(id => newIds[id] ?? id);\n    didMutate = DidMutate.Both;\n  }\n  if (ngDevMode && state.ids.length !== Object.keys(state.entityMap).length) {\n    console.warn('@ngrx/signals/entities: Entities with IDs:', ids, 'are not updated correctly.', 'Make sure to apply valid changes when using `updateEntity`,', '`updateEntities`, and `updateAllEntities` updaters.');\n  }\n  return didMutate;\n}\nfunction addEntity(entity, config) {\n  const selectId = getEntityIdSelector(config);\n  const stateKeys = getEntityStateKeys(config);\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = addEntityMutably(clonedState, entity, selectId);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction addEntities(entities, config) {\n  const selectId = getEntityIdSelector(config);\n  const stateKeys = getEntityStateKeys(config);\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = addEntitiesMutably(clonedState, entities, selectId);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction removeEntity(id, config) {\n  const stateKeys = getEntityStateKeys(config);\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = removeEntitiesMutably(clonedState, [id]);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction removeEntities(idsOrPredicate, config) {\n  const stateKeys = getEntityStateKeys(config);\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = removeEntitiesMutably(clonedState, idsOrPredicate);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction removeAllEntities(config) {\n  const stateKeys = getEntityStateKeys(config);\n  return () => ({\n    [stateKeys.entityMapKey]: {},\n    [stateKeys.idsKey]: []\n  });\n}\nfunction setEntity(entity, config) {\n  const selectId = getEntityIdSelector(config);\n  const stateKeys = getEntityStateKeys(config);\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = setEntityMutably(clonedState, entity, selectId);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction setEntities(entities, config) {\n  const selectId = getEntityIdSelector(config);\n  const stateKeys = getEntityStateKeys(config);\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = setEntitiesMutably(clonedState, entities, selectId);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction setAllEntities(entities, config) {\n  const selectId = getEntityIdSelector(config);\n  const stateKeys = getEntityStateKeys(config);\n  return () => {\n    const state = {\n      entityMap: {},\n      ids: []\n    };\n    setEntitiesMutably(state, entities, selectId);\n    return {\n      [stateKeys.entityMapKey]: state.entityMap,\n      [stateKeys.idsKey]: state.ids\n    };\n  };\n}\nfunction updateEntity(update, config) {\n  const selectId = getEntityIdSelector(config);\n  const stateKeys = getEntityStateKeys(config);\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = updateEntitiesMutably(clonedState, [update.id], update.changes, selectId);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction updateEntities(update, config) {\n  const selectId = getEntityIdSelector(config);\n  const stateKeys = getEntityStateKeys(config);\n  const idsOrPredicate = 'ids' in update ? update.ids : update.predicate;\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = updateEntitiesMutably(clonedState, idsOrPredicate, update.changes, selectId);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction updateAllEntities(changes, config) {\n  const selectId = getEntityIdSelector(config);\n  const stateKeys = getEntityStateKeys(config);\n  return state => {\n    const clonedState = cloneEntityState(state, stateKeys);\n    const didMutate = updateEntitiesMutably(clonedState, state[stateKeys.idsKey], changes, selectId);\n    return getEntityUpdaterResult(clonedState, stateKeys, didMutate);\n  };\n}\nfunction entityConfig(config) {\n  return config;\n}\nfunction withEntities(config) {\n  const {\n    entityMapKey,\n    idsKey,\n    entitiesKey\n  } = getEntityStateKeys(config);\n  return signalStoreFeature(withState({\n    [entityMapKey]: {},\n    [idsKey]: []\n  }), withComputed(store => ({\n    [entitiesKey]: computed(() => {\n      const entityMap = store[entityMapKey]();\n      const ids = store[idsKey]();\n      return ids.map(id => entityMap[id]);\n    })\n  })));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { addEntities, addEntity, entityConfig, removeAllEntities, removeEntities, removeEntity, setAllEntities, setEntities, setEntity, updateAllEntities, updateEntities, updateEntity, withEntities };\n"],
  "mappings": "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",
  "names": ["DidMutate"]
}
